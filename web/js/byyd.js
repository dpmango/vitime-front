(function() {
  window.BYYD = {
    cookie: function(name, value, days) {
      var cookies, cookiestring, date, expires;
      if (value === void 0) {
        cookiestring = '; ' + window.document.cookie;
        cookies = cookiestring.split('; ' + name + '=');
        if (cookies.length === 2) {
          return cookies.pop().split(';').shift();
        }
        return null;
      } else {
        if (value === false) {
          days = -1;
        }
        expires = void 0;
        if (days) {
          date = new Date;
          date.setTime(date.getTime() + days * 24 * 60 * 60 * 1000);
          expires = '; expires=' + date.toGMTString();
        } else {
          expires = '';
        }
        window.document.cookie = name + '=' + value + expires + '; path=/';
      }
    },
    getUrlVars: function() {
      var hash, hashes, i, vars;
      vars = [];
      hash = void 0;
      hashes = window.location.search.slice(1).split('&');
      i = 0;
      while (i < hashes.length) {
        hash = hashes[i].split('=');
        vars.push(hash[0]);
        vars[hash[0]] = hash[1];
        i++;
      }
      return vars;
    },
    getUrlVar: function(name) {
      return this.getUrlVars()[name];
    },
    pixel: function(src, options) {
      var callback_name, on_success, on_timeout, pix, timeout;
      callback_name = options.callbackName || 'callback';
      on_success = options.onSuccess || function() {};
      on_timeout = options.onTimeout || function() {};
      timeout = options.timeout || 5;
      window.timeout_trigger = window.setTimeout((function() {
        window[callback_name] = function() {};
        on_timeout();
      }), timeout * 1000);
      window[callback_name] = function() {
        window.clearTimeout(window.timeout_trigger);
        on_success();
      };
      pix = document.createElement('img');
      pix.src = src;
      pix.height = pix.width = '0px';
      if (pix.complete) {
        window[callback_name]();
      } else {
        pix.onload = window[callback_name]();
      }
      document.getElementsByTagName('body')[0].appendChild(pix);
      return console.log('test');
    },
    getAffSub: function() {
      return this.cookie('cookie_tid');
    },
    setAffSub: function() {
      if (!this.getAffSub()) {
        return this.cookie('cookie_tid', this.getUrlVar('aff_sub'));
      }
    },
    bindElement: function(element) {
      var ev;
      if (element.tagName === 'form') {
        ev = 'onsubmit';
      } else if (element.ontouchstart) {
        ev = 'ontouchstart';
      } else {
        ev = 'onclick';
      }
      return element.setAttribute(ev, "BYYD.postback(this);" + (element.getAttribute(ev)) + "; return true;");
    },
    bindActions: function() {
      var i, item, items;
      items = document.getElementsByClassName('byyd');
      i = 0;
      while (i < items.length) {
        item = items[i];
        if (item.getAttribute('data-href')) {
          item.removeAttribute('href');
        }
        this.bindElement(item);
        ++i;
      }
      return true;
    },
    init: function() {
      this.setAffSub();
      return this.bindActions();
    },
    postback: function(element) {
      var tid;
      tid = this.getAffSub();
      if ((typeof ga !== "undefined" && ga !== null) && (element.getAttribute('data-category') != null)) {
        ga('send', 'event', element.getAttribute('data-category'), element.getAttribute('data-action'), element.getAttribute('data-label'));
      }
      return this.pixel("http://postback.byyd.me/conv.json?tid=" + tid, {
        onSuccess: function() {
          console.log('success!');
          if (element.getAttribute('data-href')) {
            document.location.href = element.getAttribute('data-href');
          }
          return true;
        },
        onTimeout: function() {
          console.log('timeout!');
          if (element.getAttribute('data-href')) {
            document.location.href = element.getAttribute('data-href');
          }
          return false;
        },
        timeout: 3
      });
    },
    test: function() {
      var errors;
      errors = '';
      if (!this.getAffSub()) {
        errors += 'cookie_tid not set;\n';
      } else {
        console.log("aff_sub = " + (this.getAffSub()));
      }
      if (this.postback()) {
        console.log("success postback");
      } else {
        errors += "error postback;\n";
      }
      if (errors === '') {
        return 'ok';
      } else {
        return errors;
      }
    }
  };
  return true;
}).call(this);

// ---
// generated by coffee-script 1.9.0